# -*- coding: utf-8 -*-
"""Fuzzy control final project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MhX1_C8p_gwYI_7gAC3Vye_c6TvcV4K8
"""

!pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
import skfuzzy.control as ctrl
import matplotlib.pyplot as plt
import skfuzzy.control as fuzz_ctrl
from mpl_toolkits.mplot3d import Axes3D
## range of 溫度(c) , 大氣壓力(hPa) , 增氧機負荷面積(m^2/台) , 魚群密度(kg/m^3) 
x_temp_range = np.arange(5,40,1,np.float32)
x_pressure_range = np.arange(990,1035,1,np.float32)
x_density_range =np.arange(0.3,2.3,0.1,np.float32)
x_area_range =np.arange(1500,5000,100,np.float32 )
y_time_range=np.arange(60,180,1,np.float32)
##　variable and membership functions
x_temp = fuzz_ctrl.Antecedent(x_temp_range,"temp")
x_pressure = fuzz_ctrl.Antecedent(x_pressure_range,"pressure")
x_density = fuzz_ctrl.Antecedent(x_density_range,"density")
x_area = fuzz_ctrl.Antecedent(x_area_range,"area")#responsibled area
y_time = fuzz_ctrl.Consequent(y_time_range,"time")

x_temp["cold"] = fuzz.trapmf(x_temp_range,[5,5,9,22])
x_temp["normal"] = fuzz.trimf(x_temp_range,[12,22,32])
x_temp["hot"] = fuzz.trapmf(x_temp_range,[22,33,40,40])


x_pressure["low"] = fuzz.trapmf(x_pressure_range,[990,990,1000,1013])
x_pressure["normal"] = fuzz.trimf(x_pressure_range,[1003,1013,1023])
x_pressure["high"] = fuzz.trapmf(x_pressure_range,[1013,1020,1035,1035])

x_density["low"] = fuzz.trapmf(x_density_range,[0.3,0.3,0.7,1.3])
x_density["normal"] = fuzz.trimf(x_density_range,[0.9,1.3,1.7])
x_density["high"] = fuzz.trapmf(x_density_range,[1.3,1.9,2.3,2.3],
                                )
x_area["small"] = fuzz.trapmf(x_area_range,[1500,1500,2100,3200])
x_area["normal"] = fuzz.trimf(x_area_range,[2200,3200,4300])
x_area["big"] = fuzz.trapmf(x_area_range,[3200,4400,5000,5000])

y_time["shortest"] = fuzz.trapmf(y_time_range,[60,60,70,90])
y_time["shorter"]= fuzz.trimf(y_time_range,[80,95,110])
y_time["medium"] = fuzz.trimf(y_time_range,[100,120,140])
y_time["longer"]= fuzz.trimf(y_time_range,[130,145,160])
y_time["longest"] = fuzz.trapmf(y_time_range,[150,170,180,180])

#rule 
y_time.defuzzify_method = "centroid"

#rule longest
rule_longest=fuzz_ctrl.Rule(antecedent=(

#全部最差
(x_temp["hot"]&x_pressure["low"]&x_density["high"]&x_area["big"])

#3B1N
|(x_temp["hot"]&x_pressure["low"]&x_density["high"]&x_area["normal"])#|(x_temp["hot"]&x_pressure["low"]&x_density["normal"]&x_area["big"]) 
|(x_temp["hot"]&x_pressure["normal"]&x_density["high"]&x_area["big"])|(x_temp["normal"]&x_pressure["low"]&x_density["high"]&x_area["big"])



),consequent=y_time["longest"],label="longest")

#rule longer
rule_longer=fuzz_ctrl.Rule(antecedent=(
#3B1G
(x_temp["hot"]&x_pressure["low"]&x_density["low"]&x_area["big"])|(x_temp["hot"]&x_pressure["low"]&x_density["high"]&x_area["small"])
|(x_temp["hot"]&x_pressure["high"]&x_density["high"]&x_area["big"])|(x_temp["cold"]&x_pressure["low"]&x_density["high"]&x_area["big"])

#1N2B1G

|(x_temp["cold"]&x_pressure["low"]&x_density["high"]&x_area["normal"])|(x_temp["hot"]&x_pressure["high"]&x_density["high"]&x_area["normal"])
|(x_temp["hot"]&x_pressure["low"]&x_density["low"]&x_area["normal"])|(x_temp["hot"]&x_pressure["high"]&x_density["normal"]&x_area["big"])
|(x_temp["cold"]&x_pressure["low"]&x_density["normal"]&x_area["big"])|(x_temp["cold"]&x_pressure["normal"]&x_density["high"]&x_area["big"])
|(x_temp["cold"]&x_pressure["low"]&x_density["normal"]&x_area["small"])|(x_temp["hot"]&x_pressure["low"]&x_density["normal"]&x_area["small"]) 
|(x_temp["normal"]&x_pressure["low"]&x_density["high"]&x_area["small"])|(x_temp["hot"]&x_pressure["normal"]&x_density["low"]&x_area["big"])
|(x_temp["normal"]&x_pressure["low"]&x_density["low"]&x_area["big"])|(x_temp["normal"]&x_pressure["high"]&x_density["high"]&x_area["big"])

#2B2N

|(x_temp["hot"]&x_pressure["low"]&x_density["normal"]&x_area["normal"])|(x_temp["hot"]&x_pressure["normal"]&x_density["high"]&x_area["normal"])
|(x_temp["normal"]&x_pressure["low"]&x_density["high"]&x_area["normal"])|(x_temp["hot"]&x_pressure["normal"]&x_density["normal"]&x_area["big"])
|(x_temp["normal"]&x_pressure["low"]&x_density["normal"]&x_area["big"])|(x_temp["normal"]&x_pressure["normal"]&x_density["high"]&x_area["big"])

) ,consequent=y_time["longer"],label="longer")

rule_med=fuzz_ctrl.Rule(antecedent=(

#全部normal
(x_temp["normal"]&x_pressure["normal"]&x_density["normal"]&x_area["normal"])

#3N1B 3N1G
|(x_temp["hot"]&x_pressure["normal"]&x_density["normal"]&x_area["normal"])|(x_temp["cold"]&x_pressure["normal"]&x_density["normal"]&x_area["normal"])
|(x_temp["normal"]&x_pressure["low"]&x_density["normal"]&x_area["normal"])|(x_temp["normal"]&x_pressure["high"]&x_density["normal"]&x_area["normal"])
|(x_temp["normal"]&x_pressure["normal"]&x_density["low"]&x_area["normal"])|(x_temp["normal"]&x_pressure["high"]&x_density["high"]&x_area["normal"]) 
|(x_temp["normal"]&x_pressure["normal"]&x_density["normal"]&x_area["big"])|(x_temp["normal"]&x_pressure["high"]&x_density["normal"]&x_area["small"])

#1B1G2N
|(x_temp["hot"]&x_pressure["high"]&x_density["normal"]&x_area["normal"])|(x_temp["hot"]&x_pressure["normal"]&x_density["low"]&x_area["normal"])
|(x_temp["normal"]&x_pressure["high"]&x_density["high"]&x_area["normal"])|(x_temp["hot"]&x_pressure["normal"]&x_density["normal"]&x_area["small"])
|(x_temp["normal"]&x_pressure["high"]&x_density["normal"]&x_area["big"])|(x_temp["normal"]&x_pressure["normal"]&x_density["low"]&x_area["big"])
|(x_temp["cold"]&x_pressure["low"]&x_density["normal"]&x_area["normal"])|(x_temp["cold"]&x_pressure["normal"]&x_density["high"]&x_area["normal"]) 
|(x_temp["normal"]&x_pressure["low"]&x_density["low"]&x_area["normal"])|(x_temp["cold"]&x_pressure["normal"]&x_density["normal"]&x_area["big"])
|(x_temp["normal"]&x_pressure["low"]&x_density["normal"]&x_area["small"])|(x_temp["normal"]&x_pressure["normal"]&x_density["high"]&x_area["small"])
#2G2B
|(x_temp["cold"]&x_pressure["high"]&x_density["high"]&x_area["big"])|(x_temp["cold"]&x_pressure["low"]&x_density["high"]&x_area["small"])
|(x_temp["hot"]&x_pressure["high"]&x_density["high"]&x_area["small"])|(x_temp["cold"]&x_pressure["low"]&x_density["low"]&x_area["big"])
|(x_temp["hot"]&x_pressure["low"]&x_density["low"]&x_area["small"])|(x_temp["hot"]&x_pressure["high"]&x_density["low"]&x_area["big"])

) ,consequent=y_time["medium"],label="medium")

#shorter
rule_shorter=fuzz_ctrl.Rule(antecedent=(
#3G1B
(x_temp["cold"]&x_pressure["high"]&x_density["high"]&x_area["small"])|(x_temp["cold"]&x_pressure["low"]&x_density["low"]&x_area["small"])
|(x_temp["cold"]&x_pressure["high"]&x_density["low"]&x_area["big"])|(x_temp["hot"]&x_pressure["high"]&x_density["low"]&x_area["small"])
#2G2N
|(x_temp["normal"]&x_pressure["normal"]&x_density["low"]&x_area["small"])|(x_temp["cold"]&x_pressure["normal"]&x_density["normal"]&x_area["small"])
|(x_temp["normal"]&x_pressure["high"]&x_density["normal"]&x_area["small"])|(x_temp["normal"]&x_pressure["high"]&x_density["low"]&x_area["normal"])
|(x_temp["cold"]&x_pressure["normal"]&x_density["low"]&x_area["normal"])|(x_temp["cold"]&x_pressure["high"]&x_density["normal"]&x_area["normal"])


#1N2G1B
|(x_temp["hot"]&x_pressure["normal"]&x_density["low"]&x_area["small"])|(x_temp["cold"]&x_pressure["low"]&x_density["normal"]&x_area["small"])
|(x_temp["normal"]&x_pressure["high"]&x_density["high"]&x_area["small"])
|(x_temp["hot"]&x_pressure["high"]&x_density["low"]&x_area["normal"])
|(x_temp["cold"]&x_pressure["normal"]&x_density["low"]&x_area["big"])|(x_temp["cold"]&x_pressure["high"]&x_density["high"]&x_area["normal"])
|(x_temp["normal"]&x_pressure["low"]&x_density["low"]&x_area["small"])|(x_temp["cold"]&x_pressure["normal"]&x_density["high"]&x_area["small"])
|(x_temp["hot"]&x_pressure["high"]&x_density["normal"]&x_area["small"])
|(x_temp["normal"]&x_pressure["high"]&x_density["low"]&x_area["big"])
|(x_temp["cold"]&x_pressure["low"]&x_density["low"]&x_area["normal"])|(x_temp["cold"]&x_pressure["high"]&x_density["normal"]&x_area["big"])

) ,consequent=y_time["shorter"],label="shorter")

#shortest
rule_shortest=fuzz_ctrl.Rule(antecedent=(

#4G
(x_temp["cold"]&x_pressure["high"]&x_density["low"]&x_area["small"])

#3G1N
|(x_temp["cold"]&x_pressure["high"]&x_density["normal"]&x_area["small"])|(x_temp["normal"]&x_pressure["high"]&x_density["low"]&x_area["small"]) 
|(x_temp["cold"]&x_pressure["normal"]&x_density["low"]&x_area["small"])|(x_temp["cold"]&x_pressure["high"]&x_density["low"]&x_area["normal"])

) ,consequent=y_time["shortest"],label="shortest")

system=fuzz_ctrl.ControlSystem(rules=[rule_longest,rule_longer,rule_med,rule_shorter,rule_shortest])
sys_sim=fuzz_ctrl.ControlSystemSimulation(system)

## 自訂輸入條件
input_temp=input("請輸入溫度(C))")
input_pressure=input("請輸入大氣壓力")
input_density=input("請輸入飼養密度")
input_area=input("請輸入負荷面積")

sys_sim.input["temp"]=int(input_temp)
sys_sim.input["pressure"]=int(input_pressure)
sys_sim.input["density"]=float(input_density)
sys_sim.input["area"]=int(input_area)

## system compute
sys_sim.compute()
out_y=int(sys_sim.output["time"])
print(out_y)

# Visualize these universes and membership functions
fig,(figure1,figure2,figure3,figure4,figure5)=plt.subplots(nrows=5,figsize=(8,19))
figure1.plot(x_temp_range,fuzz.trapmf(x_temp_range,[5,5,9,22]),'b',linewidth=1.5,label='cold')
figure1.plot(x_temp_range,fuzz.trimf(x_temp_range,[12,22,32]),'g',linewidth=1.5,label='normal')
figure1.plot(x_temp_range,fuzz.trapmf(x_temp_range,[22,33,40,40]),'r',linewidth=1.5,label='hot')
figure1.set_title('water temperature')
figure1.legend()

figure2.plot(x_pressure_range,fuzz.trapmf(x_pressure_range,[990,990,1000,1013]),'b',linewidth=1.5,label='low')
figure2.plot(x_pressure_range,fuzz.trimf(x_pressure_range,[1003,1013,1023]),'g',linewidth=1.5,label='normal')
figure2.plot(x_pressure_range,fuzz.trapmf(x_pressure_range,[1013,1025,1035,1035]),'r',linewidth=1.5,label='high')
figure2.set_title('Atmospheric pressure')
figure2.legend()

figure3.plot(x_density_range,fuzz.trapmf(x_density_range,[0.3,0.3,0.7,1.3]),'b',linewidth=1.5,label='low')
figure3.plot(x_density_range,fuzz.trimf(x_density_range,[0.9,1.3,1.7]),'g',linewidth=1.5,label='normal')
figure3.plot(x_density_range,fuzz.trapmf(x_density_range,[1.3,1.9,2.3,2.3]),'r',linewidth=1.5,label='high')
figure3.set_title('density')
figure3.legend()

figure4.plot(x_area_range,fuzz.trapmf(x_area_range,[1500,1500,2200,3200]),'b',linewidth=1.5,label='small')
figure4.plot(x_area_range,fuzz.trimf(x_area_range,[2200,3200,4300]),'g',linewidth=1.5,label='normal')
figure4.plot(x_area_range,fuzz.trapmf(x_area_range,[3200,4200,5000,5000]),'r',linewidth=1.5,label='big')
figure4.set_title('responsibled area')
figure4.legend()

figure5.plot(y_time_range,fuzz.trapmf(y_time_range,[60,60,70,90]),'b',linewidth=1.5,label='shortest')
figure5.plot(y_time_range,fuzz.trimf(y_time_range,[80,95,110]),'b',linewidth=1.5,label='shorter')
figure5.plot(y_time_range,fuzz.trimf(y_time_range,[100,120,140]),'g',linewidth=1.5,label='medium')
figure5.plot(y_time_range,fuzz.trimf(y_time_range,[130,145,160]),'r',linewidth=1.5,label='longer')
figure5.plot(y_time_range,fuzz.trapmf(y_time_range,[150,170,180,180]),'r',linewidth=1.5,label='longest')
figure5.set_title('duty time')
figure5.legend()

# plot 2d figures
for fi in (figure1,figure2,figure3):
  fi.spines['top'].set_visible(False)
  fi.spines['right'].set_visible(False)
  fi.get_xaxis().tick_bottom()
  fi.get_yaxis().tick_left()

plt.tight_layout()

from mpl_toolkits.mplot3d import Axes3D# Required for 3D plotting


def funz(x,y,a,d):
  sys_sim.input["pressure"] = d
  sys_sim.input["temp"] = a
  sys_sim.input["area"] = x
  sys_sim.input["density"] = y
  sys_sim.compute()
  t=sys_sim.output["time"]
  return t

fig1=plt.figure()#建立一個繪圖物件
ax=Axes3D(fig1)#用這個繪圖物件建立一個Axes物件(有3D座標)

X,Y=np.meshgrid(x_area_range,x_density_range)
T=31*np.ones(X.shape)
P=990*np.ones(X.shape)
T=funz(X,Y,T,P)
ax.plot_surface(X,Y,T,rstride=1,cstride=1,cmap=plt.cm.coolwarm)#用取樣點(x,y,z)去構建曲面
ax.set_xlabel('area',color='r')
ax.set_ylabel('density',color='g')
ax.set_zlabel('running time',color='b')#給三個座標軸註明
plt.show()

fig=plt.figure()
ax=Axes3D(fig)
X,Y=x_pressure_range,x_temp_range
sys_sim.input["area"] = 4400
sys_sim.input["density"] = 1.3
X_data=list()
Y_data=list()
Z=list()
print(len(X_data),len(Y_data),len(Z))
k=0
for i in range(0,45):
  for j in range(0,35):
    sys_sim.input["area"] = 4400
    sys_sim.input["density"] = 1.3
    sys_sim.input["pressure"]=X[i]
    sys_sim.input["temp"]=Y[j]
    sys_sim.compute()
    X_data.append(X[i])
    Y_data.append(Y[j])
    Z.append(sys_sim.output["time"])
    #print(sys_sim.output["time"])
    k=k+1#
print(k)
print(len(X_data),len(Y_data),len(Z))
print(Z)
X_data,Y_data=np.meshgrid(X_data,Y_data)
Z_data=np.array([Z])
ax.plot_surface(X_data,Y_data,Z_data,rstride=1,cstride=1,cmap=plt.cm.coolwarm)
plt.show()